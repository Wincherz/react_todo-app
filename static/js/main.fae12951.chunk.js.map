{"version":3,"sources":["components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["TodoListItem","task","status","id","deleteItem","switchTaskStatus","checked","className","onClick","e","type","readOnly","htmlFor","TodoList","list","map","item","key","title","App","state","todos","todosLength","inputText","prevId","allTodos","addNewTask","setState","prev","length","changeInput","target","value","deleteItemList","filter","counterItemsLeft","clearCompleted","filterComponents","method","counter","this","placeholder","onKeyPress","onChange","href","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fae12951.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoListItem.scss';\n\nexport const TodoListItem = ({\n  task,\n  status,\n  id,\n  deleteItem,\n  switchTaskStatus,\n  checked,\n}) => (\n  // eslint-disable-next-line max-len\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions\n  <li\n    className={status === 'completed' ? 'completed' : 'active'}\n    onClick={e => switchTaskStatus(id)}\n  >\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={`todo-${id}`}\n        checked={checked}\n        readOnly\n      />\n      {/* eslint-disable-next-line max-len */}\n      {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions */}\n      <label\n        htmlFor={`todo-${id}`}\n        onClick={e => switchTaskStatus(id)}\n      >\n        {task}\n      </label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => deleteItem(id)}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoListItem.propTypes = {\n  task: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  switchTaskStatus: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport { TodoListItem } from '../TodoListItem/TodoListItem';\n\nexport const TodoList = ({ list, deleteItem, switchTaskStatus }) => (\n  <ul className=\"todo-list\">\n    {list.map(item => (\n      <TodoListItem\n        key={item.id}\n        id={item.id}\n        task={item.title}\n        status={item.status}\n        checked={item.checked}\n        deleteItem={deleteItem}\n        switchTaskStatus={switchTaskStatus}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  switchTaskStatus: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\n\nclass App extends Component {\n  state = {\n    todos: [],\n    todosLength: 0,\n    inputText: '',\n    prevId: 0,\n    allTodos: [],\n  }\n\n  addNewTask = (e) => {\n    if (e.key === 'Enter') {\n      this.setState(prev => ({\n        todos: [\n          ...prev.todos,\n          {\n            id: prev.prevId + 1,\n            title: prev.inputText,\n            status: 'active',\n            checked: false,\n          },\n        ],\n        allTodos: [\n          ...prev.todos,\n          {\n            id: prev.prevId + 1,\n            title: prev.inputText,\n            status: 'active',\n            checked: false,\n          },\n        ],\n        prevId: prev.prevId + 1,\n        inputText: '',\n        todosLength: prev.todos.length + 1,\n      }));\n    }\n  }\n\n  changeInput = (e) => {\n    this.setState({\n      inputText: e.target.value,\n    });\n  }\n\n  deleteItemList = (id) => {\n    this.setState(prev => ({\n      todos: prev.todos.filter(item => item.id !== id),\n      allTodos: prev.todos.filter(item => item.id !== id),\n    }));\n  }\n\n  counterItemsLeft = () => (\n    this.state.todos.filter(item => item.status === 'active').length\n  )\n\n  switchTaskStatus = (id) => {\n    this.setState(prev => ({\n      todos: prev.todos.map((item) => {\n        if (item.id === id) {\n          // Шо тут линтер хочет, я не понимаю\n          // eslint-disable-next-line no-param-reassign\n          item.status = item.status === 'completed' ? 'active' : 'completed';\n          // eslint-disable-next-line no-param-reassign\n          item.checked = !item.checked;\n        }\n\n        return item;\n      }),\n      // allTodos: prev.allTodos.map((item, i , arr) => {\n      //   console.log(arr)\n      //   if (item.id === id) {\n      //     item.status = item.status === 'completed' ? 'active' : 'completed';\n      //     item.checked = !!item.checked;\n      //   }\n      //\n      //   return item;\n      // }),\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prev => ({\n      todos: prev.todos.filter(item => item.status === 'active'),\n      allTodos: prev.todos.filter(item => item.status === 'active'),\n    }));\n  }\n\n  filterComponents = (method) => {\n    if (method === 'all') {\n      this.setState(prev => ({\n        todos: prev.allTodos,\n      }));\n    }\n\n    if (method === 'active') {\n      this.setState(prev => ({\n        todos: prev.allTodos.filter(item => item.status === 'active'),\n      }));\n    }\n\n    if (method === 'completed') {\n      this.setState(prev => ({\n        todos: prev.allTodos.filter(item => item.status === 'completed'),\n      }));\n    }\n  }\n\n  render() {\n    const counter = this.counterItemsLeft();\n    const { todosLength, todos, inputText } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onKeyPress={e => this.addNewTask(e)}\n            onChange={e => this.changeInput(e)}\n            value={inputText}\n          />\n        </header>\n\n        <section className=\"main\">\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          {!!todosLength && (\n            <TodoList\n              list={todos}\n              deleteItem={this.deleteItemList}\n              switchTaskStatus={this.switchTaskStatus}\n            />\n          )}\n\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${counter} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className=\"selected\"\n                onClick={() => this.filterComponents('all')}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                onClick={() => this.filterComponents('active')}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                onClick={() => this.filterComponents('completed')}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.clearCompleted}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}